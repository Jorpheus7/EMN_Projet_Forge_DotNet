<?xml version="1.0" encoding="utf-8"?>
<configuration>
	<configSections>
		<section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
		<section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
	</configSections>

	<system.web>
		<compilation debug="true" />
	</system.web>

	<!--#########################################################################################-->
	<!-- Section de configuration pour les chaines de connexion aux bases de données -->
	<!--#########################################################################################-->
	<connectionStrings>
	</connectionStrings>

	<!--#########################################################################################-->
	<!-- Section de configuration Unity-->
	<!--#########################################################################################-->
	<unity>
		<typeAliases>
			<typeAlias alias="ISalesOrderDataProvider" type="Soat.HappyNet.Server.Services.SalesOrder.DataAccessLayer.ISalesOrderDataProvider,Soat.HappyNet.Server.Services.SalesOrder" />
			<typeAlias alias="SalesOrderDataProvider" type="Soat.HappyNet.Server.Services.SalesOrder.DataAccessLayer.SalesOrderDataProvider, Soat.HappyNet.Server.Services.SalesOrder" />
			<typeAlias alias="ISalesOrderBusinessProvide" type="Soat.HappyNet.Server.Services.SalesOrder.BusinessLayer.ISalesOrderBusinessProvider, Soat.HappyNet.Server.Services.SalesOrder" />
			<typeAlias alias="SalesOrderBusinessProvide" type="Soat.HappyNet.Server.Services.SalesOrder.BusinessLayer.SalesOrderBusinessProvider, Soat.HappyNet.Server.Services.SalesOrder" />

			<typeAlias alias="MockSalesOrderDataProvider" type="Soat.HappyNet.Server.Tests.SalesOrder.MockProviders.MockSalesOrderDataProvider,Soat.HappyNet.Server.Tests.SalesOrder" />
		</typeAliases>
		<containers>
			<container name="salesOrderServiceContainer">
				<types>
					<type type="ISalesOrderDataProvider" mapTo="MockSalesOrderDataProvider" />
					<type type="ISalesOrderBusinessProvide" mapTo="SalesOrderBusinessProvide"/>
				</types>
			</container>
		</containers>
	</unity>

	<!--#########################################################################################-->
	<!-- Section de configuration des Services WCF -->
	<!-- When deploying the service library project, the content of the config file must be added to the host's  app.config file. System.Configuration does not support config files for libraries. -->
	<!--#########################################################################################-->
	<system.serviceModel>

		<!--###############################################################################################################-->
		<!--Ajout de l'extension pour la gestion des Faults WCF-->
		<!--###############################################################################################################-->
		<extensions>
			<behaviorExtensions>
				<add name="silverlightFaults" type="Soat.HappyNet.Server.Common.FaultBehavior.SilverlightFaultBehavior, Soat.HappyNet.Server.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
			</behaviorExtensions>
		</extensions>
		<behaviors>
			<!--###############################################################################################################-->
			<!--Behavior pour les Faults WCF-->
			<!--###############################################################################################################-->
			<endpointBehaviors>
				<behavior name="SilverlightFaultBehavior">
					<silverlightFaults/>
				</behavior>
			</endpointBehaviors>
			<!--###############################################################################################################-->
			<!--Behavior sur les Services WCF-->
			<!--###############################################################################################################-->
			<serviceBehaviors>
				<behavior name="CommonServiceBehavior">
					<serviceMetadata httpGetEnabled="true"/>
					<serviceDebug includeExceptionDetailInFaults="true"/>
				</behavior>
			</serviceBehaviors>
		</behaviors>
		<services>
			<!--###############################################################################################################-->
			<!--Service d'authentication et de récupération du membre de l'application-->
			<!--###############################################################################################################-->
			<service behaviorConfiguration="CommonServiceBehavior" name="Soat.HappyNet.Server.Services.HumanResources.HumanResourcesService">
				<endpoint address="" binding="basicHttpBinding" behaviorConfiguration="SilverlightFaultBehavior" bindingConfiguration="" name="basicHttpBindingEndPoint" contract="Soat.HappyNet.Server.Services.HumanResources.IHumanResourcesService">
					<identity>
						<dns value="localhost"/>
					</identity>
				</endpoint>
				<endpoint address="mex" binding="mexHttpBinding" name="mexHttpBindingEndPoint" contract="IMetadataExchange"/>
			</service>
		</services>
	</system.serviceModel>
</configuration>